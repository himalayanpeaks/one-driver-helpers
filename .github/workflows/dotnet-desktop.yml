name: .NET Build, Test and Publish

on:
  push:
    branches: ["main"]
    tags:
      - '*.*.*'  # Matches tags like 1.0.0, 2.1.3
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: OneDriver.Helper/OneDriver.Helper.sln

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore dependencies
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }}

      - name: Build solution
        run: msbuild $env:Solution_Name /p:Configuration=${{ matrix.configuration }}

      - name: Execute unit tests
        run: dotnet test $env:Solution_Name /p:Configuration=${{ matrix.configuration }} --no-build --verbosity normal

  publish:
    needs: build
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest

    env:
      Solution_Name: OneDriver.Helper/OneDriver.Helper.sln

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Determine version
        id: version
        shell: pwsh
        run: |
          if ("${{ github.ref_type }}" -eq "tag") {
              $ver = "${{ github.ref_name }}"
          } else {
              $lastTag = git describe --tags --abbrev=0 2>$null
              if ($lastTag) {
                  $count = git rev-list --count "$lastTag"..HEAD
                  $ver = "$lastTag-alpha.$count"
              } else {
                  $count = git rev-list --count HEAD
                  $ver = "0.0.1.$count"
              }
          }
          echo "PackageVersion=$ver" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          Write-Host "Determined version: $ver"
        
      - name: Pack NuGet Package
        run: |
            dotnet pack $env:Solution_Name `
              --configuration Release `
              --output ./packages `
              /p:PackageVersion=${{ steps.version.outputs.PackageVersion }}
        
      - name: Debug - Verify Packages Exist
        run: dir ./packages/
        
      - name: Publish NuGet Package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          dotnet nuget push ".\packages\*.nupkg" `
            --source https://api.nuget.org/v3/index.json `
            --api-key ${{ secrets.NUGET_API_KEY }} `
            --skip-duplicate
      
        

      - name: Upload NuGet Artifact (for non-tagged builds)
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: nuget-preview-packages
          path: ./packages/*.nupkg
